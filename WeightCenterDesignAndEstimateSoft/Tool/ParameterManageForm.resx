<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAKAAAAEgAAABAAAAAQAAAAEAAA
        ABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAA
        ABAAAAAQAAAAEAAAABIAAAAUAAAACgAAAAIAAAAAAAAAAAAAAAAAAAAMAgICLAgJCUQICQlSCAkJTggJ
        CU4ICQlOCAkJTggJCU4ICQlOCAkJTggJCU4ICQlOCAkJTggJCU4ICQlOCAkJTggJCU4ICQlOCAkJTggJ
        CU4ICQlOCAkJTggJCU4ICQlOCAkJUgcICFgHCAhKAgICMgAAABAAAAACAAAACCIiIjBscG+pdnp4yXR4
        ds91eHfPdHh2z3R4ds90eHbPdHh2z3R4ds90eHbPdHh2z3R4ds90eHbPdHh2z3R4ds90eHbPdHh2z3R4
        ds90eHbPdHh2z3R4ds90eHbPdHh2z3N3dc9zd3XPcnV003N3dc1na2mrERMTOAAAAA4AAAAUcHRzmcPF
        xP/X19f/19fX/9fX1//V1dX/1dXV/9TU1P/T09P/0tLS/9LS0v/R0dH/0NDQ/8/Pz//Pz8//zs7O/83N
        zf/MzMz/y8vL/8rKyv/Kysr/ycnJ/8jIyP/Hx8f/x8fH/8fHx//Hx8f/xsbG/7S1tf9na2mbAAAAIgAA
        ABB8gH+119fX/9jY2P/X19f/19fX/9bW1v/V1dX/1NTU/9TU1P/T09P/0tLS/9HR0f/Q0ND/z8/P/8/P
        z//Ozs7/zc3N/8zMzP/MzMz/y8vL/8rKyv/Jycn/ycnJ/8fHx//Hx8f/x8fH/8fHx//Hx8f/xcXF/3Z7
        ebUAAAAeAAAABIGGhK/Z2dn/2dnZ/9jY2P/X19f/1tbW/9bW1v/V1dX/1NTU/9PT0//S0tL/0dHR/9HR
        0f/Q0ND/z8/P/87Ozv/Ozs7/zc3N/8zMzP/Ly8v/y8vL/8rKyv/Jycn/yMjI/8fHx//Hx8f/x8fH/8fH
        x//Hx8f/foOBrwAAAAoAAAAAhIqHq9nZ2f/Z2dn/2NjY/9fX1//W1tb/1tbW/9XV1f/U1NT/09PT/9PT
        0//S0tL/0dHR/9DQ0P/Q0ND/zs7O/87Ozv/Nzc3/zMzM/8vLy//Ly8v/ysrK/8nJyf/IyMj/yMjI/8fH
        x//Hx8f/x8fH/8fHx/+DiIanAAAAAAAAAACEiYip5ubm//Dw8P/x8fH/8fHx//Hx8f/y8vL/8fHx//Hx
        8f/x8fH/8fHx//Dw8P/w8PD/8PDw//Dw8P/w8PD/7+/v/+/v7//w8PD/8PDw//Dw8P/v7+//7+/v/+/v
        7//u7u7/7u7u/+7u7v/t7e3/39/f/4WKiKUAAAAAAAAAAISJiJne3t7/5eXl/+Xl5f/l5eX/5ubm/+bm
        5v/m5ub/5ubm/+bm5v/i4uL/1tbW/9TU1P/T09P/09PT/9PT0//S0tL/09PT/9vb2//j4+P/5OTk/+Pj
        4//j4+P/4uLi/+Hh4f/h4eH/4ODg/+Dg4P/f4N//hIqInQAAAAAAAAAAhYmHaMfJyP/l5eX/5ubm/83M
        yf+1s6z/tbOs/7WzrP/BwLv/4uLi/6OkpP+Lj43/i4+N/4uPjf+Lj43/i4+N/4uPjf+Ljoz/homH/9XV
        1f/a2tn/srCq/7Kwqf+xr6n/sa+o/9zc3P/g4OD/4ODg/8rLyv+FiohyAAAAAAAAAACEiIc0tLe2/+bm
        5v/m5ub/uLex/3dzZf93c2X/d3Nl/42Kf//h4eH/nJ2c/7G4tf+2vbr/tr26/7a9uv+2vbr/tr26/6+2
        s/+OkY//wsLC/7i4tf9saFz/bGhc/2xoXP9ual7/ysrJ/9PT0//e3t7/trm3/4SIiDwAAAAAAAAAAI6O
        jgSipqTx4uPi/+fn5//Kysf/amdc/2pnXP9qZ1z/d3Rq/+jo6P/R0tL/oqel/7a9uv+2vbr/tr26/7a9
        uv+2vbr/oqim/4iKif+FiYj/hYqH/3d7d/93e3f/d3t3/3p+ev+Lj47/foGA/8TFxP+ipaTzgJKABgAA
        AAAAAAAAAAAAAJ2gn8PZ2tn/6Ojo/9zc2/9fXFP/X1xT/19cU/9jYVj/6urq/+jo6P+Znpz/tr26/7a9
        uv+2vbr/tr26/7a9uv+kqqf/kpOT/6GnpP+2vbr/tr26/7a9uv+2vbr/tr26/7W8uf+Lj43/urq6/5yg
        ncUAAAAAAAAAAAAAAAAAAAAAkZaUg83Pzv/p6en/6enp/15cV/9QTkj/UE5I/1BOSP/i4uL/6+vr/7e5
        uP/3+Pj/+Pn5//j5+f/4+fn/+Pn5/83Pzv/U1NT/lpuY/7a9uv+2vbr/tr26/7a9uv+2vbr/q7Kv/6+x
        sP/GyMf/kpeUgQAAAAAAAAAAAAAAAAAAAACGi4pWwcPC+enp6f/p6en/bGto/0VDQP9FQ0D/RUNA/9bW
        1v/s7Oz/ury7/9ve3f/n6en/6Orq/+rs7P/r7e3/rbGv/+bm5v+go6H/ub+9/7m/vP+5v7z/ub+8/7m/
        vP+mq6n/v8DA/77Av/eHjIpUAAAAAAAAAAAAAAAAAAAAAIWKhzKtsK7d6Ojo/+Li4v97e3r/NDQz/zQ0
        M/80NDP/u7u7/+Hh4f/Z2tn/nJ2c/z9AP/8/QD//P0E//2prav/Y2Nj/6Ojo/8HCwv/x8vL/9/j3//b3
        9//29/f/9vf2/9DS0f/LzMv/q66s2YWKiDAAAAAAAAAAAAAAAAAAAAAAhIiHGpebmsPNzs3/mZub/2tu
        bf9AQ0L/QENC/0BDQv98fn7/kpWU/6Wnp/+vr6//MzMz/zMzM/8zMzP/e3t7/+np6f/o6Oj/xMbF/8zP
        zv/h4+P/4uTk/+Xn5//m6Oj/tLa1/9zc3P+Wmpi/hImHFAAAAAAAAAAAAAAAAAAAAACAgIACg4iGnayt
        rP+hpqT/tr26/7a9uv+2vbr/tr26/7a9uv+2vbr/j5KR/7Gxsf8zMzP/MzMz/zMzM/+Ghob/6enp/+jo
        6P/V1tb/YmNi/zo7O/87PDv/XF1c/7Gysf/Oz87/19jY/4SJh5EAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACFiYhssrW0/6itq/+2vbr/tr26/7a9uv+2vbr/tr26/7W8uf+kpaX/y8vL/zMzM/8zMzP/MzMz/4+P
        j//p6en/6Ojo/9XV1f9cXFz/MzMz/zMzM/9sbGz/4ODg/+Pj4//ExcX/hImHXAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAISLhyyws7H/q6+t/7zCv/+8wsD/vMLA/7zDwP+8w8D/q7Gu/9XW1v/e3t7/MzMz/zMz
        M/8zMzP/mpqa/+np6f/o6Oj/zMzM/1RUVP8zMzP/MzMz/4mJif/k5OT/4uLi/6yvrv2GioYcAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAhI2EBqSopvOtr67/4+bk/+Pm5f/j5uT/4+Xk/+Pl5P+1ubb/6urq/+fn
        5/82Njb/NjY2/zY2Nv+lpaX/6enp/+jo6P/Gxsb/TU1N/zMzM/8zMzP/o6Oj/+Tk5P/d3d3/oaWk45KS
        kgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnKCeu66vr//Nz87/1NfW/9PV1f/T1dX/ztDQ/7O1
        tP/s7Oz/7Ozs/+vr6//r6+v/6urq/+np6f/o6Oj/6Ojo/+bm5v/j4+P/4uLi/+Hh4f/j4+P/4+Pj/9DR
        0f+ZnZyhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACPlJKBvb+//87Pzv/T1NP/09TT/9PU
        0//Q0dD/29vb/+zs7P/r6+v/6+vr/+rq6v/p6en/6enp/+jo6P/o6Oj/5+fn/+bm5v/l5eX/5eXl/+Tk
        5P/j4+P/tbi3+YyRj2IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIWKhxaFiod8hIqHq4SK
        h6uEioerhIqHq4SKh6uEioerhIqHq4SKh6uEioerhIqHq4SKh6uEioerhIqHq4SKh6uEioerhIqHq4SK
        h6uEioerhIqHq4SKh6uFiYhgiIiIBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////AAAADgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABwAAAA8AAAAPAAAADwAAAA8AAAAPgAAAH4AAAB+AAAAfgAAAH8AAAD/AAAA/wAAAP8AAAD/AA
        AB/8AAA///////////////////////////8=
</value>
  </data>
</root>