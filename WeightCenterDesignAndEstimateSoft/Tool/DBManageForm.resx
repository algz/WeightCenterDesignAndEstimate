<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN6ZAAbdmQAI3ZkACN2Z
        AAjdmQAI3ZkACN2ZAAjdmQAI3ZkACN2ZAAjdmQAI3ZkACN2ZAAjdmQAI3ZkACN2ZAAjdmQAI3pkACAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5KIAEOSi
        ABDkogAQ5KIAEOSiABDkogAQ5KIAEOSiABDkogAQ5KIAEOSiABDkogAQ5KIAEOSiABDkogAQ5KIAEOSi
        ABDkogAQ5KIAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADqqgAY6qoAGOqqABjqqgAY6qoAGOqqABjqqgAY6qoAGOqqABjqqgAY6qoAGOqqABjqqgAY6qoAGOqq
        ABjqqgAY6qoAGOqqABjqqgACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAO6yByDusgcg7rIHIO6yByDusgcg7rIHIO6yByDusgcg7rIHIO6yByDusgcg7rIHIO6y
        ByDusgcg7rIHIO6yByDusgcg7rIHIO6yCAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8LkWKPC5FijwuRYo8LkWKPC5FijwuRYo8LkWKPC5FijwuRYo8LkWKPC5
        FijwuRYo8LkWKPC5FijwuRYo8LkWKPC5FijwuRYo8LkWBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADyvyMq8sAkMPLAJDDywCQw8sAkMPLAJDDywCQw8sAkMPLA
        JDDywCQw8sAkMPLAJDDywCQw8sAkMPLAJDDywCQw8sAkMPK/Iyryvh8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANqVAAjalQAe2pUAHtqVAB7alQAe2pUAHtqV
        AB7alQAe2pUAHtqVAB7alQAe2pUAHtqVAB7alQAe2pUAHtqVAB7alQAe2pUACAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADhnQAE3ZkA492ZAP/dmQD/3ZkA/92Z
        AP/dmQD/3ZkA/92ZAP/dmQD/3ZkA/92ZAP/dmQD/3ZkA/92ZAP/dmQD/3ZkA/92ZAP/dmQDj4JwACAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOSiAB7kogD/5KIA/+Si
        AP/kogD/5KIA/+SiAP/kogD/5KIA/+SiAP/kogD/5KIA/+SiAP/kogD/5KIA/+SiAP/kogD/5KIA/+Si
        AP/kogAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6qoAHuqq
        AP/qqgD/6qoA/+qqAP/qqgD/6qoA/+qqAP/qqgD/6qoA/+qqAP/qqgD/6qoA/+qqAP/qqgD/6qoA/+qq
        AP/qqgD/6qoA/+qqAB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADusgce7rIH/+6yB//usgf/7rIH/+6yB//usgf/7rIH/+6yB//usgf/7rIH/+6yB//usgf/7rIH/+6y
        B//usgf/7rIH/+6yB//usgf/7rIHHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPC5Fh7wuRb/8LkW//C5Fv/wuRb/8LkW//C5Fv/wuRb/8LkW//C5Fv/wuRb/8LkW//C5
        Fv/wuRb/8LkW//C5Fv/wuRb/8LkW//C5Fv/wuRYeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8r4fCPK/I9/ywCT/8sAk//LAJP/ywCT/8sAk//LAJP/ywCT/8sAk//LA
        JP/ywCT/8sAk//LAJP/ywCT/8sAk//LAJP/ywCT/8r8j3/K+HwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2pUACNqVAB7alQAe2pUAHtqVAB7alQAe2pUAHtqV
        AB7alQAe2pUAHtqVAB7alQAe2pUAHtqVAB7alQAe2pUAHtqVAB7alQAIAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOGdAATdmQDj3ZkA/92ZAP/dmQD/3ZkA/92Z
        AP/dmQD/3ZkA/92ZAP/dmQD/3ZkA/92ZAP/dmQD/3ZkA/92ZAP/dmQD/3ZkA/92ZAOPgnAAIAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5KIAHuSiAP/kogD/5KIA/+Si
        AP/kogD/5KIA/+SiAP/kogD/5KIA/+SiAP/kogD/5KIA/+SiAP/kogD/5KIA/+SiAP/kogD/5KIA/+Si
        AB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADqqgAe6qoA/+qq
        AP/qqgD/6qoA/+qqAP/qqgD/6qoA/+qqAP/qqgD/6qoA/+qqAP/qqgD/6qoA/+qqAP/qqgD/6qoA/+qq
        AP/qqgD/6qoAHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO6y
        Bx7usgf/7rIH/+6yB//usgf/7rIH/+6yB//usgf/7rIH/+6yB//usgf/7rIH/+6yB//usgf/7rIH/+6y
        B//usgf/7rIH/+6yB//usgceAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA8LkWHvC5Fv/wuRb/8LkW//C5Fv/wuRb/8LkW//C5Fv/wuRb/8LkW//C5Fv/wuRb/8LkW//C5
        Fv/wuRb/8LkW//C5Fv/wuRb/8LkW//C5Fh4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADyvh8I8r8j3/LAJP/ywCT/8sAk//LAJP/ywCT/8sAk//LAJP/ywCT/8sAk//LA
        JP/ywCT/8sAk//LAJP/ywCT/8sAk//LAJP/yvyPf8r4fBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADalQAI2pUAHtqVAB7alQAe2pUAHtqVAB7alQAe2pUAHtqV
        AB7alQAe2pUAHtqVAB7alQAe2pUAHtqVAB7alQAe2pUAHtqVAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4Z0ABN2ZAOPdmQD/3ZkA/92ZAP/dmQD/3ZkA/92Z
        AP/dmQD/3ZkA/92ZAP/dmQD/3ZkA/92ZAP/dmQD/3ZkA/92ZAP/dmQD/3ZkA4+CcAAgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADkogAe5KIA/+SiAP/kogD/5KIA/+Si
        AP/kogD/5KIA/+SiAP/kogD/5KIA/+SiAP/kogD/5KIA/+SiAP/kogD/5KIA/+SiAP/kogD/5KIAHgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOqqAB7qqgD/6qoA/+qq
        AP/qqgD/6qoA/+qqAP/qqgD/6qoA/+qqAP/qqgD/6qoA/+qqAP/qqgD/6qoA/+qqAP/qqgD/6qoA/+qq
        AP/qqgAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7rIHHu6y
        B//usgf/7rIH/+6yB//usgf/7rIH/+6yB//usgf/7rIH/+6yB//usgf/7rIH/+6yB//usgf/7rIH/+6y
        B//usgf/7rIH/+6yBx4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADwuRYe8LkW//C5Fv/wuRb/8LkW//C5Fv/wuRb/8LkW//C5Fv/wuRb/8LkW//C5Fv/wuRb/8LkW//C5
        Fv/wuRb/8LkW//C5Fv/wuRb/8LkWHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPK+HwjyvyPf8sAk//LAJP/ywCT/8sAk//LAJP/ywCT/8sAk//LAJP/ywCT/8sAk//LA
        JP/ywCT/8sAk//LAJP/ywCT/8sAk//K/I9/yvh8EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////////////////////////gAAf/4A
        AH/+AAB//gAAf/4AAH/+AAB///////4AAH/+AAB//gAAf/4AAH/+AAB//gAAf//////+AAB//gAAf/4A
        AH/+AAB//gAAf/4AAH////////////////8=
</value>
  </data>
</root>