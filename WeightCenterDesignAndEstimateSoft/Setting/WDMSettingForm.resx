<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="wdmOpenFile.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABgAAAAwAAAASAAAAFAAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABQAAAAQAAAACAAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABgAAABAAAAAgAAAALgAAADoAAABAAAAAQgAAAEIAAABCAAAAQgAAAEIAAABCAAAAQAAA
        ADgAAAAoAAAAFgAAAAYAAAAAAAAABAAAAAwAAAAUAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAA
        ABYAAAAWAAAAFgAAABYAAAAiAAAANklHQmx8eG+1iYV73ZSPhf+TjoT/ko6D/5KNg/+SjoP/ko6E/5OP
        hf+UkIb/i4d9321pYpkAAAA6AAAAHgAAAAYAAAAMAAAAKgAAAD4AAABCAAAAQgAAAEIAAABCAAAAQgAA
        AEIAAABCAAAAQgAAAEIAAABCAAAAQiwrKVqOiYDfnZiO/7Grof/Kwrn/3dTM/+fc1f/t4tr/8+fh/+/j
        3f/o39f/49nS/9XLwv/Eu7L/qaKZ/5eSiP89OjdSAAAAEAAAABSJd2LFloFq/5WAaf+VgGn/lYBp/5WA
        af+VgGn/lYBp/5WAaf+VgGn/lYBp/5WAaP+VgGf/mJKH/7Wvpv/QyL7/0srB/9fNxP/b0sj/4NXN/+Xb
        0//s4Nn/6NzV/+HYz//c0sr/187G/9TMw//RycD/urOp/5qUiv8AAAAWAAAAFpaBa//UybT/z8Ou/83B
        rP/Nwaz/zcGs/83BrP/Nwaz/zcGs/83BrP/Nwaz/zcKs/9DErv+WkYj/ycG4/87Gvf/i29L/8u3m//35
        8v//+/T//vrz//768//++vP///v0//358v/07uf/5N3U/8/Hvv/Mw7n/mpSK/wAAABQAAAAWloFq/9PH
        tf/Kvan///7z/8a4pP///fL/xrik///98v/GuKT///3y/8a4pP///vP/y72n/5qWjP/f2dH/8Ori/9fS
        yv/IwLj/t66m/7Wqof+4rqT/vLCo/7mvpv+2rKL/s6if/7yyq//LxL3/5eDa/97Yz/+alIr/AAAAEgAA
        ABaXgmv/1Mq4/8m9p//FuaL///rv/8O2oP//+u//w7ag///67//DtqD///rv/8S3of////P/ta2e/8zF
        vv+ro5j/ubGm/8i/tv/UycL/4tjQ/+je1v/u4tz/6t/Y/+Pa0v/e1c3/2dDI/8e9tP+8s6r/xb21/4yH
        fsUAAAAUAAAAFpiDa//Yzr3/yr6o///98v/GuqT///vw/8a6o///+/D/x7qk///88f/JuqX///3x/83A
        p/+fmY7/urKq/8zFu//QyL//1szD/9rRyP/f1c3/5drS/+vf2P/n3NX/4NfP/9vRyf/WzcX/0srB/87G
        vf/EvLH/npmN/wAAABYAAAAWmYRs/9rRwP/MwKv/y7+p/8u/qf/Lvqn/y7+p/8u/qf/QwKv/18Gu/9jC
        r//Vw6v/2Mir/56Xif/Iwbb/zsa8/+Lb0v/y7eb//fny///79P/++vP//vrz//768///+/T//fny//Tu
        5v/k3dT/z8e+/8vCuP+fmY7/AAAAFAAAABaYg23/3dPE/87Brf/Owa3/zsGt/87Brf/Owa3/0MGu/9fD
        sf8Aijr/AIs6/+DJsP8AEfH/opqJ/+Da0P/w6uL/19LK/8jAuP+3rqb/taqh/7iupP+8sKj/ua+m/7as
        ov+zqJ//vLKr/8vEvP/l39n/3djP/6Cajv8AAAASAAAAFpmEbf/f1sf/z8Ku/9DEsP/QxLH/0MSx/9DE
        sf/RxbL/1cW0/93Ht//dx7f/2siz/9zLsP+/tqb/zca+/6ujmP+5sab/yL+2/9TJwv/i2ND/6N7W/+7i
        3P/q39j/49rS/97Vzf/Z0Mj/x720/7yzqv/FvLX/kYyCxQAAABQAAAAWmoVu/+HZy//RxLH/waiI/8Kq
        iv/Cqor/wqqK/8Kqiv/Dqov/xKqL/8Sqi//Eq4r/xqyK/6iil/+6sqn/zMW6/9DIvv/VzMP/2tDH/9/U
        zP/k2tL/69/Y/+fb1P/g1s7/2tHJ/9XMxP/RycD/zcW8/8O7sf+knZL/AAAAFgAAABabhm//49zO/9HE
        sP+/poX/v6eG/7+nhv+/p4b/v6eG/7+nhv+/p4b/v6eG/8Cnhv/DqYf/oJqQ/8a/tf/MxLr/4NnP//Dq
        5P/79vD//fny//z48f/8+PH//Pjx//348v/79/D/8ezk/+Ha0f/Nxbz/ycG3/6Sdkv8AAAAWAAAAFpyH
        cP/n3tL/0cKv//r5+P/5+Pf/+fj3//n49//5+Pf/+fj3//n49//5+Pf/+vn3//78+v+el43/29XM//z4
        8f/48uz/6ePc/9/Yz//UzMP/1MzD/9TMw//UzMP/1MzD/9TMw//j3NX/7ujh//358//e18//pJ2S/wAA
        ABYAAAAWnYhw/+jg1f/RxK//0cSw/9HEsP/RxLD/0cSw/9HEsP/RxLD/0cSw/9HEsP/SxbH/1Mex/6ym
        nP/79u7/29PK/8/Euv/Qxrv/0ca8/9HHvP/Rx73/0ce9/9HHvf/Rx73/0ce8/9DGvP/Qxbv/0Me8//Dq
        4/+mnZL/AAAAFgAAABadh3H/6uTZ/9PHs//Ap4f/waiJ/8Gpif/BqYn/wamJ/8Gpif/BqYn/wamJ/8Kp
        if/DqYj/rqmf/+LY0P/a0Mb/2tDG/9rRx//a0cf/2tHH/9rRx//a0cf/2tHH/9rRx//a0cf/2tHH/9rR
        x//a0cf/5NrS/6eflP8AAAAQAAAAFp6Icv/s5dv/1Maz/7+lhP+/pob/v6eG/7+nhv+/p4b/v6eG/7+n
        hv+/p4b/wKeG/8Gnhf+mnY//49vS/+Xd0//j3NL/49vR/+Lb0f/i2tD/4trQ/+La0P/i2tD/4trQ/+La
        0f/j29H/5NzS/+be1P/m3tT/qaGW/QAAAAYAAAAWn4ly/+7n3v/TxbH/+/r4//r5+P/6+ff/+vn3//r5
        9//6+ff/+vn3//r59//6+fj/+/r4/+zq5P+upZj/xLyx/93Uy//m39T/8efe//Dn3f/w593/8Ofd//Dn
        3f/w593/8efe/+ff0//f1cz/x7+0/66mm/uSi4EmAAAAAAAAABaginP/8Ovh/9XHs//WyLX/1si1/9bI
        tf/WyLX/1si1/9bItf/WyLX/1si1/9bItf/WyLX/18m2/9jJtf/UzsP/pJaH/6WelNuro5f/qqKW/6qi
        lv+qopb/qqKW/6qilv+qopb/qaGW46aflK2jnJBgAAAAAgAAAAAAAAAAAAAAFqCLdP/y7OT/18m2/7+n
        hv/BqIj/waiJ/8Goif/BqIn/waiJ/8Goif/BqIn/waiJ/8GoiP/Ap4b/2Mq3//Ps5P+fiXD/AAAAFgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWoYx1//Tv
        6P/Yyrb/vqWD/7+mhf+/pob/v6aG/7+mhv+/pob/v6aG/7+mhv+/pob/v6aF/76lg//Yyrf/9O/o/6GL
        dP8AAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABahjHb/9vDq/9fItf/9+vr//Pr6//z6+v/8+vr//Pr6//z6+v/8+vr//Pr6//z6+v/8+vr//fr6/9fI
        tf/28Or/oYx2/wAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFqKNd//39Oz/2Mm2/9nLuP/Zy7j/2cu4/9nLuP/Zy7j/2cu4/9nLuP/Zy7j/2cu4/9nL
        uP/Zy7j/2Mm2//f07P+ijXf/AAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAWo453//n18P/azLn/v6aF/8CoiP/BqIn/waiJ/8Goif/BqIn/waiJ/8Go
        if/BqIn/wKiI/7+mhf/azLn/+fXw/6OOd/8AAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABakj3j/+/fy/9vMuf++pIP/v6aF/7+mhv+/pob/v6aG/7+m
        hv+/pob/v6aG/7+mhv+/poX/vqSD/9vMuf/79/L/pI94/wAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFqWQeP/7+PX/2sq2//v6+P/7+vj/+/r4//v6
        +P/7+vj/+/r4//v6+P/7+vj/+/r4//v6+P/7+vj/2sq2//v49f+lkHj/AAAAFgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUpZB6//369//ayrb/2sm1/9rJ
        tf/aybX/2sm1/9rJtf/aybX/2sm1/9rJtf/aybX/2sm1/9rJtf/ayrb//fr3/6WQev8AAAAUAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyok3z////9//36
        9v/7+PX/+/j0//v49P/7+PT/+/j0//v49P/7+PT/+/j0//v49P/7+PT/+/j1//369v////3/qJN8/wAA
        AAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKWR
        fbOnkXv/ybum/83Aq//Mv6n/zL+p/8y/qf/Mv6n/zL+p/8y/qf/Mv6n/zL+p/8y/qf/NwKv/ybum/6eR
        e/+lkX2zAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAqaSfq+/rZj/4NPA/9/Rv//f0b7/39G+/9/Rvv/f0b7/39G+/9/Rvv/f0b7/39G//+DT
        wP+/rZj/ppJ+rwAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABKmVgLGtmIP/rJeC/6yXgv+sl4L/rJeC/6yXgv+sl4L/rJeC/6yX
        gv+sl4L/rZiD/6mVgLEAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////4AH//4AA4AAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAA4AAAA+AAD//gAA//4AAP/+AAD//gAA//4AA
        P/+AAD//gAA//4AAP/+AAD//wAB//+AA//8=
</value>
  </data>
</root>